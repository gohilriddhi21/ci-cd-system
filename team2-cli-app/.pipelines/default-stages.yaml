pipeline:
  name: default-stages-python
  image: python:3.11-slim
  jobs:
    - name: generate-files
      stage: build
      script:
        - >
          python -c "import os; from datetime import datetime;
          os.makedirs('artifacts', exist_ok=True);
          open('artifacts/hello.txt', 'w').write('Hello, World\\n');
          open('artifacts/info.txt', 'w').write('Pipeline Artifact Test\\n');
          open('artifacts/timestamp.txt', 'w').write(datetime.now().ctime() + '\\n')"

    - name: verify-artifacts
      stage: test
      script:
        - >
          python -c "import os;
          print('Files in artifacts directory:');
          [print('-', f) for f in os.listdir('artifacts')];
          files = ['hello.txt', 'info.txt', 'timestamp.txt'];
          [print(f'\\nContents of {name}:\\n' + open(os.path.join('artifacts', name)).read().strip()) for name in files]"

    - name: generate-docs
      stage: doc
      script:
        - >
          python -c "import os;
          os.makedirs('docs', exist_ok=True);
          with open('docs/README.md', 'w') as f:
              f.write('# Project Documentation\\n\\nThis is a placeholder README generated during the pipeline.')"

    - name: deploy-artifacts
      stage: deploy
      script:
        - >
          python -c "print('Deploying artifacts...');
          print('Simulating deployment by listing contents:');
          import os;
          for root, dirs, files in os.walk('artifacts'):
              for name in files:
                  print(f'Deploying: {os.path.join(root, name)}');
          print('Deployment complete.')"