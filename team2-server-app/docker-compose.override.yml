services:
  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - 27018:27017
    volumes:
      - mongodb-data:/data/db
    networks:
      - server-network
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 5673:5672
      - 15673:15672
    networks:
      - server-network
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - 9002:9000
      - 9003:9001
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    command: server /data --console-address ":9001"
    networks:
      - server-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 5

  docker-socket-proxy:
    image: alpine/socat
    container_name: docker-socket-proxy
    command: TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock
    ports:
      - "2374:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - server-network
    restart: unless-stopped